<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>90</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dialogue, assigned keys, also variables and objects needed

//Variables
key_assigned = vk_space;

//Create the Message object
instance_create(x, y, obj_message);
instance_create(0,0, obj_controller_background);
instance_create(0,0, obj_portrait);
instance_create(0,0, obj_title);


///Dialogue internal functionality
message_current = 0; //0 is the first number in our array, and the message we are currently at
message_end = obj_message.max_of_messages - 1; //the last number in our array
message_draw = ""; //this is what we 'write' out. It's blank right now
increase = obj_message.time_of_message; //the speed at which new characters are added
characters = 0; //how many characters you gonna draw
hold = 0; //if we hold 'Key assigned', the text will render faster

//Find the obj_message and to show the messages...
message_length = string_length(obj_message.message[message_current]); //get the number of characters in the first message
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Deep functionality

if (characters &lt; message_length) { //if current character count is less than the amount in current message* 
    hold = keyboard_check(key_assigned); //hold is true or false if we hold 'Key Assigned' or not
    characters += increase * (1 + hold); //increase speed based on hold
    message_draw = string_copy(obj_message.message[message_current], 0, characters); //copy string to current character
} 

else { //if current character is more than the amount in the current message
    if (keyboard_check_pressed(key_assigned)) { //if we press the Key Assigned...
        if (message_current &lt; message_end) { //if there are more messages left to show (0 -&gt; max, in our case)
            message_current += 1; //increase the message by 1
            message_length = string_length(obj_message.message[message_current]);  //get the new character length for message
            characters = 0; //set the characters back to 0
            message_draw = ""; //clear the drawn text
        }
        else { //if our messages are done (we reach the max, in our case)...
            //instance_destroy(); //destroy the object
            //TODO To decide if we want to destroy the "Box" or not
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Paint on screen
//Drawing the box at the coordinates
color_black = c_black;
rectangle = draw_rectangle_color(24, 576, 960, 736, color_black, color_black, color_black, color_black, false);
rectangle.depth = 0.9;

//Drawing the text
draw_set_colour(c_white);
text = draw_text_ext(180,604,message_draw, 32, 780);
text.depth = 0.5;

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
